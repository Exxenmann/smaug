{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/auth/passwordreset/passwordreset.component.html","webpack:///./src/app/components/auth/passwordreset/passwordreset.component.less","webpack:///./src/app/components/auth/passwordreset/passwordreset.component.ts","webpack:///./src/app/components/content/content.component.html","webpack:///./src/app/components/content/content.component.less","webpack:///./src/app/components/content/content.component.ts","webpack:///./src/app/components/cube/cube.component.html","webpack:///./src/app/components/cube/cube.component.less","webpack:///./src/app/components/cube/cube.component.ts","webpack:///./src/app/components/cubestack/cubestack.component.html","webpack:///./src/app/components/cubestack/cubestack.component.less","webpack:///./src/app/components/cubestack/cubestack.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.less","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.less","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/modals/modal-general/modal-general.component.html","webpack:///./src/app/components/modals/modal-general/modal-general.component.less","webpack:///./src/app/components/modals/modal-general/modal-general.component.ts","webpack:///./src/app/components/views/dashboard/dashboard.component.css","webpack:///./src/app/components/views/dashboard/dashboard.component.html","webpack:///./src/app/components/views/dashboard/dashboard.component.ts","webpack:///./src/app/components/views/login/login.component.html","webpack:///./src/app/components/views/login/login.component.less","webpack:///./src/app/components/views/login/login.component.ts","webpack:///./src/app/configs/router-config.ts","webpack:///./src/app/helper/jwt-inceptor.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/globals.service.ts","webpack:///./src/app/services/loadingoverlay.service.ts","webpack:///./src/app/services/modal.service.ts","webpack:///./src/app/services/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"layout-wrapper\\\">\\r\\n\\r\\n   <div ui-view='header' id=\\\"header\\\"></div>\\r\\n\\r\\n   <div ui-view='content' id=\\\"content\\\"></div>\\r\\n\\r\\n   <div ui-view='footer' id=\\\"footer\\\"></div>\\r\\n\\r\\n   <!-- TODO could be injected with jquery at init of modal service etc. -->\\r\\n   <!-- <modal-placeholder></modal-placeholder> -->\\r\\n   \\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { TransitionService, Transition } from '@uirouter/angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'smaug';\r\n\r\n   constructor(ts : TransitionService) {\r\n      let criteria = { to: '**', from: '**' };\r\n      ts.onSuccess(criteria, this.onPageChange.bind(this));\r\n   }\r\n\r\n   private onPageChange(transition : Transition) {\r\n      let entering = transition.entering();\r\n      if(!Array.isArray(entering) || entering.length === 0)\r\n        return;\r\n   }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {UIRouterModule} from \"@uirouter/angular\";\r\nimport { uiRouterConfig, uiRouterStates } from '@configs/router-config'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CubeComponent } from '@components/cube/cube.component';\r\nimport { LoginComponent } from '@components/views/login/login.component';\r\nimport { HeaderComponent } from '@components/header/header.component';\r\nimport { FooterComponent } from '@components/footer/footer.component';\r\nimport { ContentComponent } from '@components/content/content.component';\r\nimport { CubestackComponent } from '@components/cubestack/cubestack.component';\r\nimport { DashboardComponent } from '@components/views/dashboard/dashboard.component';\r\nimport { ModalGeneralComponent } from '@components/modals/modal-general/modal-general.component';\r\nimport { PasswordResetComponent } from '@components/auth/passwordreset/passwordreset.component'\r\n\r\nimport {RestService} from '@services/rest.service'\r\n\r\nimport { ReactiveFormsModule, FormsModule }    from '@angular/forms'\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { JwtInterceptor } from '@helper/jwt-inceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CubeComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ContentComponent,\r\n    CubestackComponent,\r\n    DashboardComponent,\r\n    ModalGeneralComponent,\r\n    PasswordResetComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    \r\n    UIRouterModule.forRoot({ //required to configure the app wide router\r\n      states: uiRouterStates, // inital set of static states\r\n      config: uiRouterConfig // configuration of the uiRouter (e.g. default state)\r\n    }),\r\n\r\n  ],\r\n  providers:[\r\n    RestService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"password-reset-request-container\\\">\\n  <h2>Reset your password</h2>\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"email\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button text=\\\"Request\\\">reset</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '@services/authentication.service';\nimport { LoadingoverlayService } from '@services/loadingoverlay.service';\nimport { ModalService } from '@services/modal.service';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.less']\n})\nexport class PasswordResetComponent {\n\n  formGroup : FormGroup;\n\n  constructor(\n    formBuilder : FormBuilder,\n    private authService : AuthenticationService,\n    private loadingOverlay : LoadingoverlayService,\n    private stateService : StateService,\n    private modalService : ModalService\n  ) {\n    this.formGroup = formBuilder.group({\n      email : [ '', [ Validators.required, Validators.email ] ]\n    });\n  }\n\n  onSubmit() {\n\n    if(this.formGroup.invalid)\n      return;\n\n    let email = this.formGroup.value.email,\n        promise = this.authService.requestPasswordReset(email),\n        dialog = {\n          title: 'E-Mail sent',\n          message: `An E-Mail with the link to reset your password has been sent to ${email}.`\n        };\n\n    return this.loadingOverlay.wrap(promise)\n      .then(() => this.modalService.info(dialog))\n      .then(() => this.stateService.go('base.home'));\n  }\n\n}\n","module.exports = \"<div ui-view='main' id=\\\"main\\\"></div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.less']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"cube\\\">\\r\\n    <div class=\\\"cube_face side cube_face--front\\\"></div>\\r\\n    <!-- <div class=\\\"cube_face side cube_face--back\\\"></div> -->\\r\\n    <!-- <div class=\\\"cube_face side cube_face--right\\\"></div> -->\\r\\n    <div class=\\\"cube_face side cube_face--left\\\"></div>\\r\\n    <div class=\\\"cube_face end cube_face--top\\\"></div>\\r\\n    <!-- <div class=\\\"cube_face end cube_face--bottom\\\"></div> -->\\r\\n  </div>\\r\\n</div>\"","module.exports = \".cube {\\n  position: relative;\\n  -webkit-transform-style: preserve-3d;\\n          transform-style: preserve-3d;\\n  transition: -webkit-transform 1s;\\n  transition: transform 1s;\\n  transition: transform 1s, -webkit-transform 1s;\\n}\\n.cube_face {\\n  position: absolute;\\n  font-weight: bold;\\n  color: black;\\n  text-align: center;\\n}\\n.cube_face.side {\\n  width: 100px;\\n  height: 25px;\\n}\\n.cube_face.end {\\n  width: 100px;\\n  height: 100px;\\n}\\n.cube {\\n  -webkit-transform: rotateX(-15deg) rotateY(45deg) rotateZ(0deg);\\n          transform: rotateX(-15deg) rotateY(45deg) rotateZ(0deg);\\n}\\n.cube_face--front {\\n  background: #eeeeee;\\n}\\n.cube_face--right {\\n  background: #cccccc;\\n}\\n.cube_face--back {\\n  background: #cccccc;\\n}\\n.cube_face--left {\\n  background: #cccccc;\\n}\\n.cube_face--top {\\n  background: #f9f9f9;\\n}\\n.cube_face--bottom {\\n  background: #cccccc;\\n}\\n.cube_face--front {\\n  -webkit-transform: rotateY(0deg) translateZ(50px);\\n          transform: rotateY(0deg) translateZ(50px);\\n}\\n.cube_face--right {\\n  -webkit-transform: rotateY(90deg) translateZ(50px);\\n          transform: rotateY(90deg) translateZ(50px);\\n}\\n.cube_face--back {\\n  -webkit-transform: rotateY(180deg) translateZ(50px);\\n          transform: rotateY(180deg) translateZ(50px);\\n}\\n.cube_face--left {\\n  -webkit-transform: rotateY(-90deg) translateZ(50px);\\n          transform: rotateY(-90deg) translateZ(50px);\\n}\\n.cube_face--top {\\n  -webkit-transform: rotateX(90deg) translateZ(50px);\\n          transform: rotateX(90deg) translateZ(50px);\\n}\\n.cube_face--bottom {\\n  -webkit-transform: rotateX(-90deg) translateZ(-25px);\\n          transform: rotateX(-90deg) translateZ(-25px);\\n}\\n\"","import { Component, OnInit  } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cube',\r\n  templateUrl: './cube.component.html',\r\n  styleUrls: ['./cube.component.less']\r\n})\r\nexport class CubeComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"position: relative; height: 130px;\\\">\\n  <app-cube style=\\\"position: absolute; bottom:0px;\\\"></app-cube>\\n  <app-cube style=\\\"position: absolute; bottom:35px;\\\"></app-cube>\\n  <app-cube style=\\\"position: absolute; bottom:70px;\\\"></app-cube>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cubestack',\n  templateUrl: './cubestack.component.html',\n  styleUrls: ['./cubestack.component.less']\n})\nexport class CubestackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div id=\\\"footer\\\" style=\\\"display: flex; justify-content: center; align-items: center;\\\">\\r\\n  <app-cubestack></app-cubestack>\\r\\n</div>\"","module.exports = \"html,\\nbody {\\n  height: 100%;\\n  margin: 0px;\\n  padding: 0px;\\n}\\nbody,\\ninput,\\nbutton {\\n  font-family: \\\"Courier New\\\";\\n  font-size: 14px;\\n}\\ninput {\\n  border: 1px solid black;\\n  padding-left: 5px;\\n}\\ninput:focus,\\ntextarea:focus {\\n  outline: none;\\n}\\ninput,\\nbutton {\\n  margin: 5px;\\n}\\nbutton {\\n  background: lightgray;\\n  border: none;\\n  padding: 5px;\\n  transition: all 0.4s ease;\\n}\\nbutton:hover {\\n  background: black;\\n  color: white;\\n}\\n#spinner {\\n  position: fixed;\\n  left: 50%;\\n  top: 50%;\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: all ease 0.4s;\\n  width: 140px;\\n  margin-left: -70px;\\n  margin-top: -78.2px;\\n}\\n#footer {\\n  height: 50px;\\n  margin-top: 50px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.less']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1>\\r\\n  <span>://SMAUG</span>\\r\\n  <span id=\\\"cursor\\\" style=\\\"padding-left: 5px;\\\">█</span>\\r\\n</h1>\"","module.exports = \"h1 {\\n  margin: 0px;\\n  padding-bottom: 15px;\\n  padding-top: 15px;\\n}\\n#cursor {\\n  color: #dddddd;\\n  animation: blink-animation 1.2s steps(2, start) infinite;\\n  -webkit-animation: blink-animation 1.2s steps(2, start) infinite;\\n}\\n@keyframes blink-animation {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n@-webkit-keyframes blink-animation {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- uses bootstrap for styling / css -->\\n<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n   <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n         <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\">{{modalheadline}}</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onCancel()\\\" aria-label=\\\"Close\\\">\\n               <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n         </div>\\n         <div class=\\\"modal-body\\\">\\n           <div *ngIf=\\\"scrollable\\\" class=\\\"pre-scrollable\\\" [innerHtml]=\\\"modalbody\\\"></div>\\n           <div *ngIf=\\\"!scrollable\\\" [innerHtml]=\\\"modalbody\\\"></div>\\n         </div>\\n         <div class=\\\"modal-footer\\\">\\n\\n            <button type=\\\"button\\\" *ngIf=\\\"btn_ok\\\" (click)=\\\"onOk()\\\" class=\\\"btn btn-primary\\\">Ok</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"btn_cancel\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-secondary\\\">Cancel</button>\\n\\n         </div>\\n      </div>\\n   </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core'\nimport * as $ from \"jquery\"\n\n@Component({\n   selector: 'modal-general',\n   templateUrl: './modal-general.component.html',\n   styleUrls: ['./modal-general.component.less']\n})\nexport class ModalGeneralComponent implements OnInit {\n\n   ngOnInit(){\n      this.showoverlay()\n   }\n\n   scrollable : boolean;\n\n   ok: Function = function() {}\n   destroy: Function = function() {}\n   closeModal: Function = function() {}\n\n   btn_ok: Boolean = false\n   btn_oktxt: String = \"OK\"\n\n   btn_cancel: Boolean = false\n   btn_canceltxt: String = \"\"\n\n   modalheadline: String = \"\"\n   modalbody: String = \"\"\n\n   private hideoverlay(){\n      $('div#modalOverlay').css('visibility','hidden')\n      $('div#modalOverlay').css('opacity','0.0')\n   }\n\n   private showoverlay(){\n      $('div#modalOverlay').css('visibility','visible')\n      $('div#modalOverlay').css('opacity','0.4')\n   }\n\n   onCancel(): void{\n      this.hideoverlay()\n      this.closeModal()\n      this.destroy()\n   }\n\n   onOk(): void{\n      this.hideoverlay()\n      this.closeModal()\n      this.destroy()\n      this.ok()\n   }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"login\\\">\\r\\n  <form [formGroup]=\\\"loginForm\\\" name=\\\"login\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n       <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" placeholder=\\\"email\\\" />\\r\\n       <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n         <div class=\\\"required_msg\\\" *ngIf=\\\"f.email.errors.required\\\">Required</div>\\r\\n         <div class=\\\"required_msg\\\" *ngIf=\\\"f.email.errors.email\\\">Please enter a valid email address</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" placeholder=\\\"password\\\"/>\\r\\n      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div class=\\\"required_msg\\\" *ngIf=\\\"f.password.errors.required\\\">Required</div>\\r\\n        <div class=\\\"required_msg\\\" *ngIf=\\\"f.password.errors.minlength\\\">At least 6 characters are required</div>\\r\\n      </div>\\r\\n\\r\\n      <div uiSref=\\\"base.password_reset\\\" class=\\\"password-reset\\\" (click)=\\\"onSubmit_event.emit()\\\">Forgot Your Password?\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button>log in</button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"html,\\nbody {\\n  height: 100%;\\n  margin: 0px;\\n  padding: 0px;\\n}\\nbody,\\ninput,\\nbutton {\\n  font-family: \\\"Courier New\\\";\\n  font-size: 14px;\\n}\\ninput {\\n  border: 1px solid black;\\n  padding-left: 5px;\\n}\\ninput:focus,\\ntextarea:focus {\\n  outline: none;\\n}\\ninput,\\nbutton {\\n  margin: 5px;\\n}\\nbutton {\\n  background: lightgray;\\n  border: none;\\n  padding: 5px;\\n  transition: all 0.4s ease;\\n}\\nbutton:hover {\\n  background: black;\\n  color: white;\\n}\\n#spinner {\\n  position: fixed;\\n  left: 50%;\\n  top: 50%;\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: all ease 0.4s;\\n  width: 140px;\\n  margin-left: -70px;\\n  margin-top: -78.2px;\\n}\\nform {\\n  text-align: center;\\n}\\n.password-reset {\\n  cursor: pointer;\\n}\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder} from '@angular/forms'\r\nimport { AuthenticationService } from '@services/authentication.service'\r\nimport { LoadingoverlayService } from '@services/loadingoverlay.service'\r\nimport { ModalService } from '@services/modal.service'\r\nimport { StateService } from '@uirouter/angular'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.less']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup\r\n  submitted = false\r\n\r\n  @Output() onSubmit_event: EventEmitter<any> = new EventEmitter()\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    // private userService: UserService,\r\n    private authenticationService: AuthenticationService,\r\n    private stateService: StateService,\r\n    private loadingoverlayService: LoadingoverlayService,\r\n    private modalService: ModalService\r\n  ) { }\r\n\r\n   onSubmit() {\r\n      this.submitted = true\r\n      \r\n      // stop here if form is invalid\r\n      if (this.loginForm.invalid) return\r\n\r\n      this.onSubmit_event.emit()\r\n      this.loadingoverlayService.start()\r\n\r\n      this.authenticationService.login(this.f.email.value, this.f.password.value)\r\n      .then(\r\n         () => {\r\n            // SUCCESS\r\n            this.loadingoverlayService.stop()\r\n            // this.stateService.go('base.backend')\r\n            console.log(\"login successfull\")\r\n         },\r\n         () => {\r\n            // ERROR\r\n         }\r\n      )\r\n   }\r\n\r\n   ngOnInit() {\r\n      this.loginForm = this.formBuilder.group({\r\n        password: ['', [Validators.required, Validators.minLength(6)]],\r\n        email: ['', [Validators.required, Validators.email]]\r\n      });\r\n   }\r\n\r\n   register(){\r\n      // button itself handles stateservice.goto\r\n\r\n      // currently only closes dialog so we use it\r\n      this.onSubmit_event.emit()\r\n   }\r\n\r\n   get f() { return this.loginForm.controls }\r\n\r\n}\r\n","\r\n// uiRouter\r\nimport { UIRouter, Transition, Ng2ViewDeclaration } from '@uirouter/angular'\r\nimport { HeaderComponent } from '@components/header/header.component'\r\nimport { ContentComponent } from '@components/content/content.component'\r\nimport { FooterComponent } from '@components/footer/footer.component'\r\n\r\n// \"views\"\r\nimport { LoginComponent } from '@components/views/login/login.component'\r\n// import { AuthComponent } from '@components/auth/auth/auth.component'\r\n// import { BackendComponent } from '@components/page/backend/backend.component'\r\n\r\n// import { VerifyMailComponent } from '@components/page/verify-mail/verify-mail.component'\r\n// import { PasswordResetUseComponent } from '@components/auth/password-reset-use/password-reset-use.component'\r\nimport { PasswordResetComponent } from '@components/auth/passwordreset/passwordreset.component'\r\n// import { AdminComponent } from '@components/page/admin/admin.component'\r\n// import { AdvantagesComponent } from '@components/page/advantages/advantages.component'\r\n\r\n// import { UserService } from '../service/user.service'\r\n// import { AuthenticationService } from '../service/authentication.service'\r\n// import { PrivacyPolicyComponent } from '@components/page/privacy-policy/privacy-policy.component'\r\n// import { LegalDisclaimerComponent } from '@components/page/legal-disclaimer/legal-disclaimer.component'\r\n// import { AboutThisWebsiteComponent } from '@components/page/about-this-website/about-this-website.component'\r\n// import { RegistrationComponent } from '@components/page/registration/registration.component'\r\n// import { RegistersuccessfullComponent } from '@components/page/registersuccessfull/registersuccessfull.component'\r\n\r\nexport function uiRouterConfig(router: UIRouter) {}\r\n\r\nexport const uiRouterStates = [\r\n\r\n  {\r\n    abstract:true,\r\n    name: 'base',\r\n    url: '',\r\n    views: {\r\n      header: {component: HeaderComponent} as Ng2ViewDeclaration,\r\n      content: {component: ContentComponent} as Ng2ViewDeclaration,\r\n      footer: {component: FooterComponent} as Ng2ViewDeclaration\r\n    }\r\n  },\r\n\r\n  {\r\n    name: 'base.login', \r\n    url: '/',\r\n    views: {\r\n      main: {component: LoginComponent} as Ng2ViewDeclaration,\r\n    },\r\n    data: { }\r\n  },\r\n   // {\r\n   //    name: 'base.registration',\r\n   //    url: '/token-sale',\r\n   //    views: {\r\n   //       main: { component: RegistrationComponent }\r\n   //    },\r\n   //    data: {\r\n   //       background: 'red'\r\n   //    }\r\n   // },\r\n   // {\r\n   //    name: 'base.registrationsuccessfull', \r\n   //    url: '/register-success',  \r\n   //    views: {\r\n   //       main: {component: RegistersuccessfullComponent} as Ng2ViewDeclaration,\r\n   //    },\r\n   //    data: {\r\n   //       background: 'red'\r\n   //    }\r\n   // },\r\n   // {\r\n   //    name: 'base.auth', \r\n   //    url: '/auth',  \r\n   //    views: {\r\n   //       main: {component: AuthComponent} as Ng2ViewDeclaration,\r\n   //    },\r\n   //    data: {}\r\n   // },\r\n\r\n   // {\r\n   //    name: 'base.verify_email', \r\n   //    url: '/verify-email/:user_id/:confirmation_code',  \r\n   //    resolve: [\r\n   //       {\r\n   //          token: 'user_id', \r\n   //          deps: [Transition],\r\n   //          resolveFn: resolveUserId\r\n   //       },\r\n   //       {\r\n   //          token: 'confirmation_code', \r\n   //          deps: [Transition],\r\n   //          resolveFn: resolveConfirmationCode\r\n   //       }\r\n   //    ],\r\n   //    views: {\r\n   //       main: {component: VerifyMailComponent} as Ng2ViewDeclaration,\r\n   //    },\r\n   //    data: {}\r\n   // },\r\n  {\r\n    name: 'base.password_reset',\r\n    url: '/password-reset',\r\n    resolve: [],\r\n    views: {\r\n       main: { component: PasswordResetComponent }\r\n    },\r\n    data: { background: 'red' }\r\n  },\r\n   // {\r\n   //    name: 'base.password_reset_use',\r\n   //    url: '/password-reset/:token',\r\n   //    resolve: [\r\n   //       {\r\n   //          token: 'token',\r\n   //          deps: [ Transition ],\r\n   //          resolveFn: resolveToken\r\n   //       }\r\n   //    ],\r\n   //    views: {\r\n   //       main: { component: PasswordResetUseComponent }\r\n   //    },\r\n   //    data: { background: 'red' }\r\n   // },\r\n   // {\r\n   //    name: 'base.backend',\r\n   //    url: '/backend',\r\n   //    views: {\r\n   //       main: {component: BackendComponent} as Ng2ViewDeclaration,\r\n   //    },\r\n   //    data: { background: 'black' },\r\n   //    resolve: [\r\n   //       {\r\n   //          token: 'user',\r\n   //          deps: [ UserService ],\r\n   //          resolveFn: resolveAccountInformation\r\n   //       }\r\n   //    ],\r\n   //    redirectTo: redirectAdmin\r\n   // },\r\n   // {\r\n   //    name: 'base.admin',\r\n   //    url: '/admin',\r\n   //    views: {\r\n   //       main: { component: AdminComponent }\r\n   //    },\r\n   //    data: { background: 'black' },\r\n   //    resolve: [\r\n   //       {\r\n   //          token: 'users',\r\n   //          deps: [ UserService ],\r\n   //          resolveFn: resolveValidatableUsers\r\n   //       },\r\n   //       {\r\n   //          token: 'download_token',\r\n   //          deps: [ UserService ],\r\n   //          resolveFn: resolveDownloadToken\r\n   //       }\r\n   //    ]\r\n   // },\r\n\r\n]\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n \r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentToken = localStorage.getItem('currentToken');\r\n        if (currentToken) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentToken}`\r\n                }\r\n            });\r\n        }\r\n \r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { RestService } from '@services/rest.service'\nimport { GlobalsService } from '@services/globals.service'\nimport { StateService } from '@uirouter/angular'\n\nexport type PasswordResetData = {\n   password : string,\n   password_confirmation : string\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n   constructor(\n      private http: HttpClient,\n      private globalsService: GlobalsService,\n      private stateService: StateService,\n      private restService: RestService\n   ) { \n\n      if((localStorage.getItem(\"currentToken\") != null) && (localStorage.getItem(\"username\") != null)){\n         this.globalsService.isloggedin = true\n         this.stateService.go('base.backend')\n      }\n   }\n\n   login(email: string, password: string) {\n\n      let promise = new Promise((resolve, reject) => {\n\n         this.restService.post('auth/login',{ email: email, password: password })\n         .then(\n            // SUCCESS\n            (data) => {\n               this.setLoginData(data)\n               resolve()\n            },\n            // ERROR\n            () => {\n               reject()\n            }\n         )\n      })\n\n      return promise\n\n      // return this.http.post<any>('/api/auth/login', { email: email, password: password })\n      //    .pipe(\n      //       map(data => {\n      //          this.setLoginData(data)\n      //       })\n      //    )\n   }\n\n   setLoginData(data){\n      if(data.user && data.token) {\n\n         // also store it in global service so buttons can watch it\n         this.globalsService.isloggedin = true\n\n         // store user details and jwt token in local storage to keep user logged in between page refreshes\n         localStorage.setItem('currentToken', data.token)\n         localStorage.setItem('username', data.user.name)\n         localStorage.setItem('isAdmin', data.user.admin)\n      }\n   }\n\n   isAuthenticated(){\n      return (localStorage.getItem(\"currentToken\") !== null)\n   }\n\n   isAdmin(){\n      return localStorage.getItem('isAdmin')==\"true\"\n   }\n\n   getUsername(){\n      return localStorage.getItem('username')\n   }\n\n  logout() {\n    // TODO use rest service so a consistent unified api is used\n\n    let f = () => {\n      this.globalsService.isloggedin = false\n      localStorage.removeItem('currentToken')\n      localStorage.removeItem('isAdmin')\n      localStorage.removeItem('username')\n    }\n\n    return this.http.post('/api/protected/account/logout', {})\n    .toPromise()\n    .then(f)\n    .catch(f)\n  }\n\n  public requestPasswordReset(email : string) {\n    return this.restService.post('auth/reset/generate', { email });\n  }\n\n  public resetPassword(token : string, data : PasswordResetData) {\n    let body = Object.assign({ token }, data);\n\n    return this.restService.post('auth/reset/use', body);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n\n   isloggedin\n   dev=false\n\n   constructor() {\n\n      if(window.location.origin.includes('192.168.'))\n         this.dev=true\n\n   }\n\n}","import { Injectable } from '@angular/core';\nimport * as $ from \"jquery\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingoverlayService {\n\n   overlay\n   spinner\n\n   constructor() { \n      this.overlay = $('<div id=\"overlay\"></div>')\n      this.overlay.appendTo(document.body)\n\n      this.spinner = $('<img id=\"spinner\" src=\"assets/images/Eclipse-1s-90px.svg\"/>')\n      this.spinner.appendTo(document.body)\n\n      this.overlay.css('z-index', 80001);\n      this.spinner.css('z-index', 80002);\n   }\n\n   start(){\n      // console.log(\"start loading\")\n      $(this.overlay).css('visibility','visible')\n      $(this.overlay).css('opacity','0.5')\n\n      $(this.spinner).css('visibility','visible')\n      $(this.spinner).css('opacity','1')\n   }\n\n   stop(){\n      // console.log(\"stop loading\")\n      $(this.overlay).css('visibility','hidden')\n      $(this.overlay).css('opacity','0.0')\n\n      $(this.spinner).css('visibility','hidden')\n      $(this.spinner).css('opacity','0.0')\n   }\n\n   /**\n    * This shows the loading overlay until the resolution of the given promise.\n    *\n    * @param      {Promise<T>}  promise  The promise\n    * @param      {boolean}     swallow  Whether to rethrow errors in the\n    *                                    catch-handler. This can be used to\n    *                                    prevent console-spam when error\n    *                                    responses are expected (e.g.\n    *                                    server-side validation)\n    * @return     {Promise<T>}  Effectively the first argument\n    */\n   public wrap<T>(promise : Promise<T>, swallow? : boolean) : Promise<T> {\n      this.start();\n\n      return promise\n         .then(a => (this.stop(), a))\n         .catch(e => {\n            this.stop();\n\n            if(swallow !== true)\n               return Promise.reject(e);\n         });\n   }\n}\n","import {\n  Component,\n  NgModule,\n  ViewChild,\n  OnInit,\n  ViewContainerRef,\n  Compiler,\n  ReflectiveInjector,\n  Injectable,\n  Injector,\n  ComponentRef,\n  ApplicationRef,\n  EmbeddedViewRef,\n  ComponentFactoryResolver\n} from \"@angular/core\"\n\nimport {\n  of,\n  Observable,\n  Subject,\n  BehaviorSubject,\n  ReplaySubject\n} from \"rxjs\"\n\nimport { AppModule } from \"../app.module\"\nimport { ModalGeneralComponent } from '@components/modals/modal-general/modal-general.component';\nimport * as $ from \"jquery\"\n\nexport type InfoModalData = {\n   title : string,\n   message : string,\n   ok? : string\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n   // here we hold our placeholder\n   private vcRef: ViewContainerRef;\n   // here we hold our injector\n   // private injector: Injector\n   // we can use this to determine z-index of multiple modals\n   public activeInstances: number = 0\n    \n   constructor(\n      private compiler: Compiler,\n      private appRef : ApplicationRef,\n      private factoryResolver : ComponentFactoryResolver,\n      private injector : Injector\n   ) {\n\n   }\n\n   /**\n    * This method is only kept for backwards-compatibility\n    */\n   registerViewContainerRef(vcRef: ViewContainerRef): void {\n   }\n\n   /**\n    * This method is only kept for backwards-compatibility\n    */\n   registerInjector(injector: Injector): void {\n   }\n\n   create<T>(component: any, parameters?: Object): ReplaySubject<ComponentRef<T>> {\n\n      // we return a stream so we can  access the componentref\n      let componentRef$ = new ReplaySubject<ComponentRef<T>>()\n\n      let factory = this.factoryResolver.resolveComponentFactory(component),\n          ref = factory.create(this.injector),\n          elem = (ref.hostView as EmbeddedViewRef<T>).rootNodes[0],\n          destroy = ref.destroy.bind(ref);\n\n      (ref.instance as any).destroy = (...args) => {\n         document.body.removeChild(elem)\n         destroy(...args)\n      }\n\n      Object.assign(ref.instance, parameters)\n\n      this.appRef.attachView(ref.hostView);\n      document.body.appendChild(elem);\n\n      componentRef$.next(ref as ComponentRef<T>)\n\n      return componentRef$\n   }\n\n   public info(data : InfoModalData) {\n\n      let params = {\n         modalheadline: data.title,\n         modalbody: data.message,\n         btn_ok: true,\n         btn_oktxt: data.ok || 'OK'\n      }\n\n      return new Promise(resolve => {\n         this.create<ModalGeneralComponent>(ModalGeneralComponent, params)\n            .subscribe(ref => {\n               ref.instance.ok = resolve;\n            })\n      })\n   }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient,HttpHeaders, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http'\nimport { StateService } from '@uirouter/angular'\nimport { LoadingoverlayService } from './loadingoverlay.service'\nimport { GlobalsService } from '@services/globals.service'\nimport { ModalService } from '@services/modal.service'\n\n@Injectable()\nexport class RestService {\n\n   baseurl = '/api/';\n\n   constructor(\n      private http: HttpClient,\n      private stateService: StateService,\n      private loadingoverlayService: LoadingoverlayService,\n      private globalsService: GlobalsService,\n      private modalService: ModalService\n   ) {}\n\n   private notAuthorized(){\n\n      alert(\"Your Authentication could not be verified. Probably your session is expired. Please login again.\")\n\n      this.globalsService.isloggedin = false\n      localStorage.removeItem('currentToken')\n      localStorage.removeItem('isAdmin')\n      localStorage.removeItem('username')\n      this.stateService.go('base.home')\n   }\n\n   private requestErrorGeneral(error){\n      console.error(error)\n      this.loadingoverlayService.stop()\n   }\n\n   public uploadFiles(files: Set<File>){\n\n      let promise = new Promise((resolve, reject) => {\n         files.forEach(file => {\n\n            const formData: FormData = new FormData()\n            formData.append('file', file, file.name)\n            const req = new HttpRequest('POST', this.baseurl+'admin/acceptpdfs', formData, {})\n\n            this.http.request(req).subscribe(\n               event => {\n                  if (event instanceof HttpResponse)\n                     resolve()\n               },\n               error => {\n                  this.requestErrorGeneral(error)\n\n                  if(error.status==401){\n                     this.notAuthorized()\n                     this.stateService.go('base.home')\n                  }\n                  reject()\n               }\n            )\n         })\n\n      })\n\n      return promise\n   }\n\n   public downloadFile(endpoint:String, postData:Object, filename:string, p_responseMimeType:string){\n\n      var restService = this\n\n      var responseMimeType = (p_responseMimeType) ? p_responseMimeType : \"application/octet-stream\"\n\n      var HTTPOptions = {\n         headers: new HttpHeaders({\n            'Accept': responseMimeType\n         }),\n         'responseType': 'blob' as 'json',\n      }\n\n      // COMMENTED OUT IN CASE ONE EVER NEEDS A REAL PROGRESSBAR THAT KNOWS PERCENT - DOESNT WORK BUT IS A GOOD HEADSTART\n      // also reportProgress: true in HTTPOptions\n      // const req = new HttpRequest('POST', this.baseurl+endpoint, filename, HTTPOptions)\n\n      // this.http.request(req).subscribe(\n      //    event => {\n      //       if (event.type === HttpEventType.DownloadProgress) {\n\n      //          console.log(event)\n\n      //          const percentDone = Math.round(100 * event.loaded / event.total)\n      //          console.log(`File is ${percentDone}% downloaded.`)\n      //       } else if (event instanceof HttpResponse) {\n      //          console.log('File is completely downloaded!')\n      //       }\n      // })\n\n      this.http.post(this.baseurl+endpoint,postData,HTTPOptions)\n      .subscribe(\n         res => {\n            // console.log('start download:',res)\n\n            var blob = new Blob([res], {type: \"octet/stream\"})\n            var url = window.URL.createObjectURL(blob)\n\n            var a = document.createElement('a')\n            document.body.appendChild(a)\n            a.setAttribute('style', 'display: none')\n            a.href = url\n            a.download = filename;\n            a.click()\n            window.URL.revokeObjectURL(url)\n            a.remove()\n         },\n         error => {\n            this.requestErrorGeneral(error)\n\n            if(error.status==401){\n               this.notAuthorized()\n               this.stateService.go('base.home')\n            }\n\n         },\n         () => {\n            // console.log('Completed file download.')\n         }\n      )\n   }\n\n   public post(endpoint:String, postData:Object){\n\n      let promise = new Promise((resolve, reject) => {\n         this.http.post(this.baseurl+endpoint,postData,{}).toPromise()\n         .then((res: Response) => {\n            resolve(res)\n         })\n         .catch((response: Response | any) => {\n            this.handleResponseError(response)\n            reject()\n         })\n      })\n\n      return promise\n   }\n\n   public get(endpoint : string) {\n      let promise = new Promise((resolve, reject) => {\n         this.http.get(this.baseurl + endpoint).toPromise()\n         .then((res: Response) => {\n            resolve(res)\n         })\n         .catch((response: Response | any) => {\n            this.handleResponseError(response)\n            reject()\n         })\n      })\n\n      return promise\n   }\n\n   public put(endpoint : string, data : any) {\n\n      let promise = new Promise((resolve, reject) => {\n         this.http.put(this.baseurl + endpoint, data).toPromise()\n         .then((res: Response) => {\n            resolve(res)\n         })\n         .catch((response: Response | any) => {\n            this.handleResponseError(response)\n            reject()\n         })\n      })\n\n      return promise\n   }\n\n   private handleResponseError(response){\n      this.requestErrorGeneral(response)\n\n      if(response.status==200) return\n\n      else if(response.status==401){\n\n         if( response.error.error==\"user_not_confirmed\" ){\n            this.modalService.info({\n               title: 'Account not yet confirmed',\n               message: \"This account has not yet been confirmed via Email. Please confirm it via the link we have sent you.\"\n            })\n         }\n         else if(response.error.error==\"invalid_credentials\"){\n            this.modalService.info({\n               title: 'Login not successfull',\n               message: \"The login was not successfull. Please check your credentials.\"\n            })\n         }\n         else{\n            this.notAuthorized()\n         }\n\n         // if invalid credentials is returned dont go to start page\n         // because user probably is on login screen and wants to reenter credentials\n         if( response.error.error!=\"invalid_credentials\" )\n            this.stateService.go('base.home')\n\n      }\n\n      // Method Not Allowed\n      else if(response.status==405){\n         this.notAuthorized()\n      }\n\n      else if(response.status==422){\n\n         var errors_s=\"\"\n\n         for (var key in response.error.errors) {\n            if (response.error.errors.hasOwnProperty(key)) {\n               errors_s+=key+\": \"+response.error.errors[key]\n               errors_s+='<br>'\n            }\n         }\n\n         var message = 'Your request was invalid because of the following errors:<br>'+errors_s\n\n         this.modalService.info({\n            title: 'ERROR',\n            message: message\n         })\n\n      }\n\n      else if(response.status==500){\n         alert(\"ERROR: an internal server error happened - please contact the system administrator.\")\n      }\n\n      else{\n         let msg = JSON.stringify(response.error.message)\n         let time = JSON.stringify(response.error.time)\n\n         this.modalService.info({\n            title: 'ERROR - please report this message to us',\n            message: \"ERROR: a server error happened - please report this error to us.<br>HTTP Code: \"+\n            response.status+\"<br>Error message: \" + msg + \" \" + time\n         })\n\n      }\n   }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}